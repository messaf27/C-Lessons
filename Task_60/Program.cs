/*
Задача 60. ...Сформируйте трёхмерный массив из неповторяющихся двузначных чисел. 
Напишите программу, которая будет построчно выводить массив, добавляя индексы каждого элемента.
Массив размером 2 x 2 x 2
66(0,0,0) 25(0,1,0)
34(1,0,0) 41(1,1,0)
27(0,0,1) 90(0,1,1)
26(1,0,1) 55(1,1,1)
*/

int[,,] CreateUniqArray3D(int x, int y, int z, int rndMin, int rndMax)
{
    int[,,] arr = new int[x, y, z];
    int currentRndNum = 0;

    if ((rndMax - rndMin) < (x * y * z))
    {
        Console.WriteLine("Невозможно заполнить массив уникальными данными, поменяйте диапозон генерации!");
        Console.WriteLine($"Дапозон генерации: {(rndMax - rndMin)}, Размер массива: {(x * y * z)}");
    }
    else
    {
        for (int i = 0; i < arr.GetLength(0); i++)
        {
            for (int j = 0; j < arr.GetLength(1); j++)
            {
                for (int k = 0; k < arr.GetLength(2); k++)
                {
                    currentRndNum = new Random().Next(rndMin, rndMax + 1);

                    for (int m = 0; m < k + 1; m++)
                    {
                        while (arr[i, j, m] == currentRndNum)
                        {
                            currentRndNum = new Random().Next(rndMin, rndMax + 1);
                            Console.WriteLine("Совпадение!!!");
                        }
                    }

                    arr[i, j, k] = currentRndNum;
                }
            }
        }
    }

    return arr;
}

void PrintArray3D(int[,,] arr)
{
    for (int x = 0; x < arr.GetLength(0); x++)
    {
        for (int y = 0; y < arr.GetLength(1); y++)
        {
            for (int z = 0; z < arr.GetLength(2); z++)
            {
                Console.Write($"{arr[x, y, z]}->({x}, {y}, {z})\t");
            }
            Console.WriteLine();
        }
    }
}

Console.WriteLine("=========== Задача №60 ============= ");
int X, Y, Z, MinVal, MaxVal;

Console.Write("Введите размер массива по X: ");
X = Convert.ToInt32(Console.ReadLine()); 

Console.Write("Введите размер массива по Y: ");
Y = Convert.ToInt32(Console.ReadLine()); 

Console.Write("Введите размер массива по Z: ");
Z = Convert.ToInt32(Console.ReadLine()); 

Console.Write("Введите минимальное число: ");
MinVal = Convert.ToInt32(Console.ReadLine()); 

Console.Write("Введите максимальное число: ");
MaxVal = Convert.ToInt32(Console.ReadLine()); 

int[,,] array3d = CreateUniqArray3D(X, Y, Z, MinVal, MaxVal);
PrintArray3D(array3d);

/*
Terminal:

PS E:\PlatformioProject\CSharpLessons\Task_60> dotnet run
=========== Задача №60 =============
Введите размер массива по X: 3
Введите размер массива по Y: 3
Введите размер массива по Z: 3
Введите минимальное число: 27
Введите максимальное число: 54
Совпадение!!!
49->(0, 0, 0)   45->(0, 0, 1)   27->(0, 0, 2)
31->(0, 1, 0)   28->(0, 1, 1)   44->(0, 1, 2)
54->(0, 2, 0)   53->(0, 2, 1)   38->(0, 2, 2)
37->(1, 0, 0)   43->(1, 0, 1)   29->(1, 0, 2)
49->(1, 1, 0)   30->(1, 1, 1)   27->(1, 1, 2)
32->(1, 2, 0)   39->(1, 2, 1)   46->(1, 2, 2)
37->(2, 0, 0)   42->(2, 0, 1)   28->(2, 0, 2)
46->(2, 1, 0)   43->(2, 1, 1)   40->(2, 1, 2)
53->(2, 2, 0)   34->(2, 2, 1)   48->(2, 2, 2)
PS E:\PlatformioProject\CSharpLessons\Task_60> dotnet run
=========== Задача №60 ============= 
Введите размер массива по X: 5
Введите размер массива по Y: 5
Введите размер массива по Z: 6
Введите минимальное число: 1
Введите максимальное число: 55
Невозможно заполнить массив уникальными данными, поменяйте диапозон генерации!
Дапозон генерации: 54, Размер массива: 150
0->(0, 0, 0)    0->(0, 0, 1)    0->(0, 0, 2)    0->(0, 0, 3)    0->(0, 0, 4)    0->(0, 0, 5)
0->(0, 1, 0)    0->(0, 1, 1)    0->(0, 1, 2)    0->(0, 1, 3)    0->(0, 1, 4)    0->(0, 1, 5)
0->(0, 2, 0)    0->(0, 2, 1)    0->(0, 2, 2)    0->(0, 2, 3)    0->(0, 2, 4)    0->(0, 2, 5)
0->(0, 3, 0)    0->(0, 3, 1)    0->(0, 3, 2)    0->(0, 3, 3)    0->(0, 3, 4)    0->(0, 3, 5)
0->(0, 4, 0)    0->(0, 4, 1)    0->(0, 4, 2)    0->(0, 4, 3)    0->(0, 4, 4)    0->(0, 4, 5)
0->(1, 1, 0)    0->(1, 1, 1)    0->(1, 1, 2)    0->(1, 1, 3)    0->(1, 1, 4)    0->(1, 1, 5)
0->(1, 2, 0)    0->(1, 2, 1)    0->(1, 2, 2)    0->(1, 2, 3)    0->(1, 2, 4)    0->(1, 2, 5)
0->(1, 3, 0)    0->(1, 3, 1)    0->(1, 3, 2)    0->(1, 3, 3)    0->(1, 3, 4)    0->(1, 3, 5)
0->(1, 4, 0)    0->(1, 4, 1)    0->(1, 4, 2)    0->(1, 4, 3)    0->(1, 4, 4)    0->(1, 4, 5)
0->(2, 0, 0)    0->(2, 0, 1)    0->(2, 0, 2)    0->(2, 0, 3)    0->(2, 0, 4)    0->(2, 0, 5)
0->(2, 1, 0)    0->(2, 1, 1)    0->(2, 1, 2)    0->(2, 1, 3)    0->(2, 1, 4)    0->(2, 1, 5)
0->(2, 2, 0)    0->(2, 2, 1)    0->(2, 2, 2)    0->(2, 2, 3)    0->(2, 2, 4)    0->(2, 2, 5)
0->(2, 3, 0)    0->(2, 3, 1)    0->(2, 3, 2)    0->(2, 3, 3)    0->(2, 3, 4)    0->(2, 3, 5)
0->(2, 4, 0)    0->(2, 4, 1)    0->(2, 4, 2)    0->(2, 4, 3)    0->(2, 4, 4)    0->(2, 4, 5)
0->(3, 0, 0)    0->(3, 0, 1)    0->(3, 0, 2)    0->(3, 0, 3)    0->(3, 0, 4)    0->(3, 0, 5)
0->(3, 1, 0)    0->(3, 1, 1)    0->(3, 1, 2)    0->(3, 1, 3)    0->(3, 1, 4)    0->(3, 1, 5)
0->(3, 2, 0)    0->(3, 2, 1)    0->(3, 2, 2)    0->(3, 2, 3)    0->(3, 2, 4)    0->(3, 2, 5)
0->(3, 3, 0)    0->(3, 3, 1)    0->(3, 3, 2)    0->(3, 3, 3)    0->(3, 3, 4)    0->(3, 3, 5)
0->(3, 4, 0)    0->(3, 4, 1)    0->(3, 4, 2)    0->(3, 4, 3)    0->(3, 4, 4)    0->(3, 4, 5)
0->(4, 0, 0)    0->(4, 0, 1)    0->(4, 0, 2)    0->(4, 0, 3)    0->(4, 0, 4)    0->(4, 0, 5)
0->(4, 1, 0)    0->(4, 1, 1)    0->(4, 1, 2)    0->(4, 1, 3)    0->(4, 1, 4)    0->(4, 1, 5)
0->(4, 2, 0)    0->(4, 2, 1)    0->(4, 2, 2)    0->(4, 2, 3)    0->(4, 2, 4)    0->(4, 2, 5)
0->(4, 3, 0)    0->(4, 3, 1)    0->(4, 3, 2)    0->(4, 3, 3)    0->(4, 3, 4)    0->(4, 3, 5)
0->(4, 4, 0)    0->(4, 4, 1)    0->(4, 4, 2)    0->(4, 4, 3)    0->(4, 4, 4)    0->(4, 4, 5)
PS E:\PlatformioProject\CSharpLessons\Task_60> dotnet run
=========== Задача №60 ============= 
Введите размер массива по X: 5
Введите размер массива по Y: 5
Введите размер массива по Z: 6
Введите минимальное число: 1
Введите максимальное число: 150
Невозможно заполнить массив уникальными данными, поменяйте диапозон генерации!
Дапозон генерации: 149, Размер массива: 150
0->(0, 0, 0)    0->(0, 0, 1)    0->(0, 0, 2)    0->(0, 0, 3)    0->(0, 0, 4)    0->(0, 0, 5)
0->(0, 1, 0)    0->(0, 1, 1)    0->(0, 1, 2)    0->(0, 1, 3)    0->(0, 1, 4)    0->(0, 1, 5)
0->(0, 2, 0)    0->(0, 2, 1)    0->(0, 2, 2)    0->(0, 2, 3)    0->(0, 2, 4)    0->(0, 2, 5)
0->(0, 3, 0)    0->(0, 3, 1)    0->(0, 3, 2)    0->(0, 3, 3)    0->(0, 3, 4)    0->(0, 3, 5)
0->(0, 4, 0)    0->(0, 4, 1)    0->(0, 4, 2)    0->(0, 4, 3)    0->(0, 4, 4)    0->(0, 4, 5)
0->(1, 1, 0)    0->(1, 1, 1)    0->(1, 1, 2)    0->(1, 1, 3)    0->(1, 1, 4)    0->(1, 1, 5)
0->(1, 2, 0)    0->(1, 2, 1)    0->(1, 2, 2)    0->(1, 2, 3)    0->(1, 2, 4)    0->(1, 2, 5)
0->(1, 3, 0)    0->(1, 3, 1)    0->(1, 3, 2)    0->(1, 3, 3)    0->(1, 3, 4)    0->(1, 3, 5)
0->(1, 4, 0)    0->(1, 4, 1)    0->(1, 4, 2)    0->(1, 4, 3)    0->(1, 4, 4)    0->(1, 4, 5)
0->(2, 0, 0)    0->(2, 0, 1)    0->(2, 0, 2)    0->(2, 0, 3)    0->(2, 0, 4)    0->(2, 0, 5)
0->(2, 1, 0)    0->(2, 1, 1)    0->(2, 1, 2)    0->(2, 1, 3)    0->(2, 1, 4)    0->(2, 1, 5)
0->(2, 2, 0)    0->(2, 2, 1)    0->(2, 2, 2)    0->(2, 2, 3)    0->(2, 2, 4)    0->(2, 2, 5)
0->(2, 3, 0)    0->(2, 3, 1)    0->(2, 3, 2)    0->(2, 3, 3)    0->(2, 3, 4)    0->(2, 3, 5)
0->(2, 4, 0)    0->(2, 4, 1)    0->(2, 4, 2)    0->(2, 4, 3)    0->(2, 4, 4)    0->(2, 4, 5)
0->(3, 0, 0)    0->(3, 0, 1)    0->(3, 0, 2)    0->(3, 0, 3)    0->(3, 0, 4)    0->(3, 0, 5)
0->(3, 1, 0)    0->(3, 1, 1)    0->(3, 1, 2)    0->(3, 1, 3)    0->(3, 1, 4)    0->(3, 1, 5)
0->(3, 2, 0)    0->(3, 2, 1)    0->(3, 2, 2)    0->(3, 2, 3)    0->(3, 2, 4)    0->(3, 2, 5)
0->(3, 3, 0)    0->(3, 3, 1)    0->(3, 3, 2)    0->(3, 3, 3)    0->(3, 3, 4)    0->(3, 3, 5)
0->(3, 4, 0)    0->(3, 4, 1)    0->(3, 4, 2)    0->(3, 4, 3)    0->(3, 4, 4)    0->(3, 4, 5)
0->(4, 0, 0)    0->(4, 0, 1)    0->(4, 0, 2)    0->(4, 0, 3)    0->(4, 0, 4)    0->(4, 0, 5)
0->(4, 1, 0)    0->(4, 1, 1)    0->(4, 1, 2)    0->(4, 1, 3)    0->(4, 1, 4)    0->(4, 1, 5)
0->(4, 2, 0)    0->(4, 2, 1)    0->(4, 2, 2)    0->(4, 2, 3)    0->(4, 2, 4)    0->(4, 2, 5)
0->(4, 3, 0)    0->(4, 3, 1)    0->(4, 3, 2)    0->(4, 3, 3)    0->(4, 3, 4)    0->(4, 3, 5)
0->(4, 4, 0)    0->(4, 4, 1)    0->(4, 4, 2)    0->(4, 4, 3)    0->(4, 4, 4)    0->(4, 4, 5)
PS E:\PlatformioProject\CSharpLessons\Task_60> dotnet run
=========== Задача №60 ============= 
Введите размер массива по X: 5   
Введите размер массива по Y: 5
Введите размер массива по Z: 6
Введите минимальное число: 0
Введите максимальное число: 150
Совпадение!!!
Совпадение!!!
9->(0, 0, 0)    48->(0, 0, 1)   38->(0, 0, 2)   139->(0, 0, 3)  47->(0, 0, 4)   114->(0, 0, 5)
6->(0, 1, 0)    55->(0, 1, 1)   88->(0, 1, 2)   77->(0, 1, 3)   90->(0, 1, 4)   116->(0, 1, 5)
143->(0, 2, 0)  121->(0, 2, 1)  63->(0, 2, 2)   108->(0, 2, 3)  147->(0, 2, 4)  18->(0, 2, 5)
55->(0, 3, 0)   99->(0, 3, 1)   65->(0, 3, 2)   28->(0, 3, 3)   17->(0, 3, 4)   54->(0, 3, 5)
112->(0, 4, 0)  106->(0, 4, 1)  135->(0, 4, 2)  74->(0, 4, 3)   125->(0, 4, 4)  102->(0, 4, 5)
13->(1, 0, 0)   147->(1, 0, 1)  69->(1, 0, 2)   3->(1, 0, 3)    139->(1, 0, 4)  19->(1, 0, 5)
45->(1, 1, 0)   105->(1, 1, 1)  67->(1, 1, 2)   66->(1, 1, 3)   43->(1, 1, 4)   123->(1, 1, 5)
110->(1, 2, 0)  52->(1, 2, 1)   3->(1, 2, 2)    69->(1, 2, 3)   66->(1, 2, 4)   80->(1, 2, 5)
84->(1, 3, 0)   114->(1, 3, 1)  5->(1, 3, 2)    37->(1, 3, 3)   139->(1, 3, 4)  119->(1, 3, 5)
22->(1, 4, 0)   93->(1, 4, 1)   117->(1, 4, 2)  31->(1, 4, 3)   139->(1, 4, 4)  118->(1, 4, 5)
51->(2, 0, 0)   36->(2, 0, 1)   103->(2, 0, 2)  54->(2, 0, 3)   9->(2, 0, 4)    40->(2, 0, 5)
149->(2, 1, 0)  72->(2, 1, 1)   88->(2, 1, 2)   70->(2, 1, 3)   6->(2, 1, 4)    36->(2, 1, 5)
33->(2, 2, 0)   71->(2, 2, 1)   3->(2, 2, 2)    101->(2, 2, 3)  122->(2, 2, 4)  80->(2, 2, 5)
22->(2, 3, 0)   100->(2, 3, 1)  111->(2, 3, 2)  75->(2, 3, 3)   25->(2, 3, 4)   127->(2, 3, 5)
129->(2, 4, 0)  107->(2, 4, 1)  55->(2, 4, 2)   41->(2, 4, 3)   147->(2, 4, 4)  11->(2, 4, 5)
60->(3, 0, 0)   62->(3, 0, 1)   77->(3, 0, 2)   72->(3, 0, 3)   120->(3, 0, 4)  67->(3, 0, 5)
84->(3, 1, 0)   121->(3, 1, 1)  97->(3, 1, 2)   62->(3, 1, 3)   82->(3, 1, 4)   124->(3, 1, 5)
140->(3, 2, 0)  139->(3, 2, 1)  102->(3, 2, 2)  58->(3, 2, 3)   133->(3, 2, 4)  17->(3, 2, 5)
66->(3, 3, 0)   62->(3, 3, 1)   150->(3, 3, 2)  47->(3, 3, 3)   91->(3, 3, 4)   19->(3, 3, 5)
17->(3, 4, 0)   144->(3, 4, 1)  5->(3, 4, 2)    105->(3, 4, 3)  3->(3, 4, 4)    96->(3, 4, 5)
22->(4, 0, 0)   15->(4, 0, 1)   43->(4, 0, 2)   92->(4, 0, 3)   19->(4, 0, 4)   143->(4, 0, 5)
146->(4, 1, 0)  65->(4, 1, 1)   7->(4, 1, 2)    102->(4, 1, 3)  124->(4, 1, 4)  25->(4, 1, 5)
73->(4, 2, 0)   106->(4, 2, 1)  11->(4, 2, 2)   5->(4, 2, 3)    150->(4, 2, 4)  144->(4, 2, 5)
29->(4, 3, 0)   116->(4, 3, 1)  146->(4, 3, 2)  93->(4, 3, 3)   47->(4, 3, 4)   67->(4, 3, 5)
144->(4, 4, 0)  12->(4, 4, 1)   133->(4, 4, 2)  68->(4, 4, 3)   74->(4, 4, 4)   14->(4, 4, 5)
PS E:\PlatformioProject\CSharpLessons\Task_60> 
*/